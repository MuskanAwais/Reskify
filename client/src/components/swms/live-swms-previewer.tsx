import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Collapsible, CollapsibleContent, CollapsibleTrigger } from "@/components/ui/collapsible";
import { 
  FileText, 
  ChevronDown, 
  ChevronUp, 
  Eye, 
  Calendar,
  MapPin,
  User,
  Briefcase,
  Shield,
  AlertTriangle,
  CheckCircle,
  Wrench
} from "lucide-react";

interface LiveSWMSPreviewerProps {
  formData: any;
  currentStep: number;
}

export default function LiveSWMSPreviewer({ formData, currentStep }: LiveSWMSPreviewerProps) {
  const [isExpanded, setIsExpanded] = useState(true);

  // Only show previewer after step 1 (when we have project information for watermark)
  if (currentStep < 2 || !formData.jobName) {
    return null;
  }

  const formatDate = (dateString: string) => {
    if (!dateString) return "Not specified";
    return new Date(dateString).toLocaleDateString('en-AU');
  };

  const getCompletionStatus = () => {
    const sections = [
      { name: "Project Details", completed: !!(formData.jobName && formData.jobNumber && formData.projectAddress && formData.startDate) },
      { name: "Activities & Risk Assessment", completed: !!(formData.selectedTasks && formData.selectedTasks.length > 0) },
      { name: "Plant & Equipment", completed: !!(formData.plantEquipment && formData.plantEquipment.length > 0) },
      { name: "Emergency Procedures", completed: !!(formData.emergencyProcedures || formData.emergencyContactsList?.length > 0) },
      { name: "Legal Disclaimer", completed: !!formData.acceptedDisclaimer },
    ];
    
    const completed = sections.filter(s => s.completed).length;
    const total = sections.length;
    
    return { completed, total, percentage: Math.round((completed / total) * 100) };
  };

  const completionStatus = getCompletionStatus();

  return (
    <Card className="mb-6 border-2 border-blue-200 bg-blue-50/50">
      <Collapsible open={isExpanded} onOpenChange={setIsExpanded}>
        <CollapsibleTrigger asChild>
          <CardHeader className="cursor-pointer hover:bg-blue-50 transition-colors">
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-3">
                <Eye className="h-5 w-5 text-blue-600" />
                <CardTitle className="text-lg">Live SWMS Preview</CardTitle>
                <Badge variant="outline" className="bg-blue-100 text-blue-800">
                  {completionStatus.percentage}% Complete
                </Badge>
              </div>
              <div className="flex items-center gap-2">
                <span className="text-sm text-gray-600">
                  Step {currentStep} of 7
                </span>
                {isExpanded ? (
                  <ChevronUp className="h-4 w-4" />
                ) : (
                  <ChevronDown className="h-4 w-4" />
                )}
              </div>
            </div>
          </CardHeader>
        </CollapsibleTrigger>
        
        <CollapsibleContent>
          <CardContent className="space-y-6">
            {/* Document Header with Watermark */}
            <div className="p-4 bg-white border rounded-lg shadow-sm">
              <div className="flex items-center justify-between mb-4 pb-2 border-b">
                <div>
                  <h3 className="text-lg font-semibold text-gray-800">
                    Safe Work Method Statement
                  </h3>
                  <p className="text-sm text-gray-600">Generated by Riskify</p>
                </div>
                <div className="text-right text-sm text-gray-600">
                  <div>Document Date: {formatDate(new Date().toISOString())}</div>
                  <div>Status: Draft</div>
                </div>
              </div>

              {/* Project Information Watermark */}
              <div className="bg-gray-50 p-3 rounded border-l-4 border-l-blue-500">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-3 text-sm">
                  <div>
                    <span className="font-medium">Project:</span> {formData.jobName || "Not specified"}
                  </div>
                  <div>
                    <span className="font-medium">Job No:</span> {formData.jobNumber || "Not specified"}
                  </div>
                  <div className="md:col-span-2">
                    <span className="font-medium">Address:</span> {formData.projectAddress || "Not specified"}
                  </div>
                  <div>
                    <span className="font-medium">Trade:</span> {formData.tradeType || "Not specified"}
                  </div>
                  <div>
                    <span className="font-medium">Start Date:</span> {formatDate(formData.startDate)}
                  </div>
                </div>
              </div>
            </div>

            {/* Content Sections */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {/* Project Details Section */}
              <div className="p-4 bg-white border rounded-lg">
                <div className="flex items-center gap-2 mb-3">
                  <User className="h-4 w-4 text-blue-600" />
                  <h4 className="font-medium">Project Details</h4>
                  {formData.jobName && formData.jobNumber && formData.projectAddress && formData.startDate ? (
                    <CheckCircle className="h-4 w-4 text-green-600" />
                  ) : (
                    <AlertTriangle className="h-4 w-4 text-amber-600" />
                  )}
                </div>
                <div className="text-sm space-y-1">
                  <div>Principal Contractor: {formData.principalContractor || "Not specified"}</div>
                  <div>Project Manager: {formData.projectManager || "Not specified"}</div>
                  <div>Site Supervisor: {formData.siteSupervisor || "Not specified"}</div>
                </div>
              </div>

              {/* Activities Section */}
              <div className="p-4 bg-white border rounded-lg">
                <div className="flex items-center gap-2 mb-3">
                  <Briefcase className="h-4 w-4 text-blue-600" />
                  <h4 className="font-medium">Work Activities</h4>
                  {formData.selectedTasks && formData.selectedTasks.length > 0 ? (
                    <CheckCircle className="h-4 w-4 text-green-600" />
                  ) : (
                    <AlertTriangle className="h-4 w-4 text-amber-600" />
                  )}
                </div>
                <div className="text-sm">
                  {formData.selectedTasks && formData.selectedTasks.length > 0 ? (
                    <div>
                      <div>{formData.selectedTasks.length} tasks selected</div>
                      <div className="text-xs text-gray-600 mt-1">
                        First task: {formData.selectedTasks[0]?.task || "Unknown"}
                      </div>
                    </div>
                  ) : (
                    <div className="text-gray-500">No activities selected</div>
                  )}
                </div>
              </div>

              {/* Risk Assessment Section */}
              <div className="p-4 bg-white border rounded-lg">
                <div className="flex items-center gap-2 mb-3">
                  <Shield className="h-4 w-4 text-blue-600" />
                  <h4 className="font-medium">Risk Assessment</h4>
                  {formData.riskAssessments && formData.riskAssessments.length > 0 ? (
                    <CheckCircle className="h-4 w-4 text-green-600" />
                  ) : (
                    <AlertTriangle className="h-4 w-4 text-amber-600" />
                  )}
                </div>
                <div className="text-sm">
                  {formData.riskAssessments && formData.riskAssessments.length > 0 ? (
                    <div>{formData.riskAssessments.length} risk assessments documented</div>
                  ) : (
                    <div className="text-gray-500">Risk assessments pending</div>
                  )}
                </div>
              </div>

              {/* Plant & Equipment Section */}
              <div className="p-4 bg-white border rounded-lg">
                <div className="flex items-center gap-2 mb-3">
                  <Wrench className="h-4 w-4 text-blue-600" />
                  <h4 className="font-medium">Plant & Equipment</h4>
                  {formData.plantEquipment && formData.plantEquipment.length > 0 ? (
                    <CheckCircle className="h-4 w-4 text-green-600" />
                  ) : (
                    <AlertTriangle className="h-4 w-4 text-amber-600" />
                  )}
                </div>
                <div className="text-sm">
                  {formData.plantEquipment && formData.plantEquipment.length > 0 ? (
                    <div>{formData.plantEquipment.length} equipment items documented</div>
                  ) : (
                    <div className="text-gray-500">No equipment added</div>
                  )}
                </div>
              </div>
            </div>

            {/* Emergency Procedures */}
            {(formData.emergencyProcedures || formData.emergencyContactsList?.length > 0) && (
              <div className="p-4 bg-white border rounded-lg">
                <div className="flex items-center gap-2 mb-3">
                  <AlertTriangle className="h-4 w-4 text-red-600" />
                  <h4 className="font-medium">Emergency Procedures</h4>
                  <CheckCircle className="h-4 w-4 text-green-600" />
                </div>
                <div className="text-sm space-y-2">
                  {formData.emergencyContactsList && formData.emergencyContactsList.length > 0 && (
                    <div>
                      <span className="font-medium">Emergency Contacts:</span> {formData.emergencyContactsList.length} contacts
                    </div>
                  )}
                  {formData.emergencyProcedures && (
                    <div>
                      <span className="font-medium">Procedures:</span> Documented
                    </div>
                  )}
                </div>
              </div>
            )}

            {/* Completion Progress */}
            <div className="p-4 bg-gradient-to-r from-blue-50 to-green-50 border rounded-lg">
              <div className="flex items-center justify-between mb-2">
                <h4 className="font-medium">Document Completion</h4>
                <span className="text-sm font-medium">{completionStatus.completed}/{completionStatus.total} sections</span>
              </div>
              <div className="w-full bg-gray-200 rounded-full h-2">
                <div 
                  className="bg-blue-600 h-2 rounded-full transition-all duration-300"
                  style={{ width: `${completionStatus.percentage}%` }}
                ></div>
              </div>
              <p className="text-xs text-gray-600 mt-2">
                Complete all sections to generate your professional SWMS document
              </p>
            </div>
          </CardContent>
        </CollapsibleContent>
      </Collapsible>
    </Card>
  );
}